{"version":3,"file":"component---src-pages-archive-js-4cd49b0736bd7b821608.js","mappings":"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","sources":["webpack://v1/./src/pages/archive.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport styled from 'styled-components';\nimport { srConfig } from '@config';\nimport sr from '@utils/sr';\nimport { Layout } from '@components';\nimport { Icon } from '@components/icons';\nimport { usePrefersReducedMotion } from '@hooks';\nimport { FormattedMessage } from 'react-intl';\n\nconst StyledTableContainer = styled.div`\n  margin: 100px -20px;\n\n  @media (max-width: 768px) {\n    margin: 50px -10px;\n  }\n\n  table {\n    width: 100%;\n    border-collapse: collapse;\n\n    .hide-on-mobile {\n      @media (max-width: 768px) {\n        display: none;\n      }\n    }\n\n    tbody tr {\n      &:hover,\n      &:focus {\n        background-color: var(--light-navy);\n      }\n    }\n\n    th,\n    td {\n      padding: 10px;\n      text-align: left;\n\n      &:first-child {\n        padding-left: 20px;\n\n        @media (max-width: 768px) {\n          padding-left: 10px;\n        }\n      }\n      &:last-child {\n        padding-right: 20px;\n\n        @media (max-width: 768px) {\n          padding-right: 10px;\n        }\n      }\n\n      svg {\n        width: 20px;\n        height: 20px;\n      }\n    }\n\n    tr {\n      cursor: default;\n\n      td:first-child {\n        border-top-left-radius: var(--border-radius);\n        border-bottom-left-radius: var(--border-radius);\n      }\n      td:last-child {\n        border-top-right-radius: var(--border-radius);\n        border-bottom-right-radius: var(--border-radius);\n      }\n    }\n\n    td {\n      &.year {\n        padding-right: 20px;\n\n        @media (max-width: 768px) {\n          padding-right: 10px;\n          font-size: var(--fz-sm);\n        }\n      }\n\n      &.title {\n        padding-top: 15px;\n        padding-right: 20px;\n        color: var(--lightest-slate);\n        font-size: var(--fz-xl);\n        font-weight: 600;\n        line-height: 1.25;\n      }\n\n      &.company {\n        font-size: var(--fz-lg);\n        white-space: nowrap;\n      }\n\n      &.tech {\n        font-size: var(--fz-xxs);\n        font-family: var(--font-mono);\n        line-height: 1.5;\n        .separator {\n          margin: 0 5px;\n        }\n        span {\n          display: inline-block;\n        }\n      }\n\n      &.links {\n        min-width: 100px;\n\n        div {\n          display: flex;\n          align-items: center;\n\n          a {\n            ${({ theme }) => theme.mixins.flexCenter};\n            flex-shrink: 0;\n          }\n\n          a + a {\n            margin-left: 10px;\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst ArchivePage = ({ location, data }) => {\n  const projects = data.allMarkdownRemark.edges;\n  const revealTitle = useRef(null);\n  const revealTable = useRef(null);\n  const revealProjects = useRef([]);\n  const prefersReducedMotion = usePrefersReducedMotion();\n\n  useEffect(() => {\n    if (prefersReducedMotion) {\n      return;\n    }\n\n    sr.reveal(revealTitle.current, srConfig());\n    sr.reveal(revealTable.current, srConfig(200, 0));\n    revealProjects.current.forEach((ref, i) => sr.reveal(ref, srConfig(i * 10)));\n  }, []);\n\n  return (\n    <Layout location={location}>\n      <Helmet title=\"Archive\" />\n\n      <main>\n        <header ref={revealTitle}>\n          <h1 className=\"big-heading\">\n            <FormattedMessage id=\"archivePageHeading\" />\n          </h1>\n          <p className=\"subtitle\">\n            <FormattedMessage id=\"archiveSectionTitle\" />\n          </p>\n        </header>\n\n        <StyledTableContainer ref={revealTable}>\n          <table>\n            <thead>\n              <tr>\n                <th>\n                  <FormattedMessage id=\"archiveTableYearTxt\" />\n                </th>\n                <th>\n                  <FormattedMessage id=\"archiveTableTitleTxt\" />\n                </th>\n                <th className=\"hide-on-mobile\">\n                  <FormattedMessage id=\"archiveTableCompanyTxt\" />\n                </th>\n                <th className=\"hide-on-mobile\">\n                  <FormattedMessage id=\"archiveTableTechTxt\" />\n                </th>\n                <th>\n                  <FormattedMessage id=\"archiveTableLinkTxt\" />\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {projects.length > 0 &&\n                projects.map(({ node }, i) => {\n                  const { date, github, external, ios, android, title, tech, company } =\n                    node.frontmatter;\n                  return (\n                    <tr key={i} ref={el => (revealProjects.current[i] = el)}>\n                      <td className=\"overline year\">{`${new Date(date).getFullYear()}`}</td>\n\n                      <td className=\"title\">{title}</td>\n\n                      <td className=\"company hide-on-mobile\">\n                        {company ? <span>{company}</span> : <span>â€”</span>}\n                      </td>\n\n                      <td className=\"tech hide-on-mobile\">\n                        {tech?.length > 0 &&\n                          tech.map((item, i) => (\n                            <span key={i}>\n                              {item}\n                              {''}\n                              {i !== tech.length - 1 && <span className=\"separator\">&middot;</span>}\n                            </span>\n                          ))}\n                      </td>\n\n                      <td className=\"links\">\n                        <div>\n                          {external && (\n                            <a href={external} aria-label=\"External Link\">\n                              <Icon name=\"External\" />\n                            </a>\n                          )}\n                          {github && (\n                            <a href={github} aria-label=\"GitHub Link\">\n                              <Icon name=\"GitHub\" />\n                            </a>\n                          )}\n                          {ios && (\n                            <a href={ios} aria-label=\"Apple App Store Link\">\n                              <Icon name=\"AppStore\" />\n                            </a>\n                          )}\n                          {android && (\n                            <a href={android} aria-label=\"Google Play Store Link\">\n                              <Icon name=\"PlayStore\" />\n                            </a>\n                          )}\n                        </div>\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n        </StyledTableContainer>\n      </main>\n    </Layout>\n  );\n};\nArchivePage.propTypes = {\n  location: PropTypes.object.isRequired,\n  data: PropTypes.object.isRequired,\n};\n\nexport default ArchivePage;\n\nexport const pageQuery = graphql`\n  {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/content/projects/ready/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            date\n            title\n            tech\n            github\n            external\n            ios\n            android\n            company\n          }\n          html\n        }\n      }\n    }\n  }\n`;\n"],"names":["StyledTableContainer","styled","div","withConfig","displayName","componentId","_ref","theme","mixins","flexCenter","_ref2","location","data","projects","allMarkdownRemark","edges","revealTitle","useRef","revealTable","revealProjects","prefersReducedMotion","usePrefersReducedMotion","useEffect","sr","reveal","current","srConfig","forEach","ref","i","React","Layout","Helmet","title","className","FormattedMessage","id","length","map","_ref3","node","date","github","external","ios","android","tech","company","frontmatter","key","el","Date","getFullYear","item","href","Icon","name"],"sourceRoot":""}